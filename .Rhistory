IAT(info)
IAT(info, to=3417)
strat('model1')
dev.off()
draw.strat()
dev.copy2pdf(file="~/Dropbox/coffee_ms/revision/model1.pdf")
strat('model2')
strat('model2')
dev.off()
draw.strat()
draw.strat(modelled.ex=2)
draw.strat(modelled.ex=1)
draw.strat(modelled.ex=.5)
draw.strat(modelled.ex=.3)
draw.strat(modelled.ex=.3, calibrated.ex=.2)
draw.strat(modelled.ex=.3, calibrated.ex=.6)
draw.strat(modelled.ex=.3, calibrated.ex=1)
draw.strat()
dev.copy2pdf(file="~/Dropbox/coffee_ms/revision/model2.pdf")
strat('model2', its=1e6)
strat('model2', normal=T)
require(roxygen2)
roxygenise(cf)
cf
q()
cf
ls()
rm(info)
require(devtools)
render()
vignette(cf)
?vignette
build_vignettes(cf)
set.seed(123)
sim.strat()
require(coffee)
sim.strat()
strat(its=7e5)
build_vignettes(cf)
png("~/strat.png")
set.seed(123)
sim.strat()
strat(its=7e5)
dev.off()
build_vignettes(cf)
build(cf0
build(cf)
install(cf)
set.seed(123)
sim.strat()
q()
80*1.15
97/1.19
19/100*97
97-18.43
97* (1-.19)
100*1.01^5
.8*45
.28*200
x^3*x^5
x <- 10
x^3*x^5
x^(5+3_
x^(5+3)
update.packages()
update.packages()
update.packages()
141/85
1.66*60
99.6-60
.6*60
128/59
328/150
.1866666666*60
.2*60
8000/2500
q()
require(rintcal)
rintcal::intcal.data
rintcal::intcal.read.data
tmp <- rintcal::intcal.read.data()
tmp
q()
require(coffee)
install.packages('coffee')
require(coffee)
strat()
strat(its=1e6)
strat(its=2e5)
q()
cf
require(devtools)
install.packages('devtools')
install.packages('devtools')
q()
require(coffee)
install.packages('coffee')
require(coffee)
strats('rolls')
strat('rolls')
strat('rolls')
strat('rolls')
strat('rolls')
strat('rolls')
draw.strat(heights=10)
draw.strat(heights=1)
draw.strat()
dev.off()
draw.strat()
draw.strat(heights=1)
draw.strat(heights=10)
draw.strat(heights=1)
dev.off()
draw.strat(modelled.ex=10))
draw.strat(modelled.ex=10)
strat('rolls', its=1e6)
strat('rolls', its=1e6)
draw.strat(modelled.ex=10)
info$dets
strat('rolls', its=1e5)
strat('rolls', its=1e5)
rm(info)
strat('rolls', its=1e5)
getwd()
q()
require(coffee)
strat('rolls', its=1e4)
strat('rolls', its=1e5)
draw.strat(modelled.ex=10)
strat('rolls', its=1e5, normal=T)
draw.strat(modelled.ex=10)
strat('rolls', its=1e5, normal=T)
draw.strat(modelled.ex=10)
draw.strat(modelled.ex=5)
draw.strat(modelled.ex=5, calibrated.ex=10)
draw.strat(modelled.ex=5, calibrated.ex=5)
draw.strat(modelled.ex=5, calibrated.ex=3)
draw.strat(modelled.ex=7, calibrated.ex=3)
draw.strat(modelled.ex=7, calibrated.ex=2)
abline(v=2250)
abline(v=2250)
dev.off()
draw.strat(modelled.ex=7, calibrated.ex=2)
abline(v=2250)
abline(v=2220)
abline(v=2230)
q()
version
q()
cf
require(devtools)
build(cf)
document(cf)
build(cf)
document(cf)
build(cf)
check(cf)
q()
require(devtools)
require(coffee)
load_all(cf)
load_all(cf)
strat.cleanup9)
strat.cleanup()
strat()
q()
require(devtools)
require(coffee)
build(cf)
install(cf)
strat()
colorRamp
red_green_scale <- colorRamp(c("red", "green"))
red_green_scale
red_green_scale(.2)
red_green_scale(.2)/255
info$within.hpds
load_all(cf)
strat()
colorRamp(c("red", "green"))
colorRamp(c("red", "green"))/255
colorRamp(c("red", "green"))/255
colorRamp(c("red", "green"))
colorRamp(.2, c("red", "green"))
    red_green_scale <- colorRamp(c("red", "green"))
red_green_scale
red_green_scale(.4)
load_all(cf)
strat()
median(rnorm(1e3))
a
info$ages
info$output
ages <- info$output
apply(ages, median)
sapply(ages, median)
lapply(ages, median)
lapply
lapply(ages, median, 1)
lapply(ages, median, 2)
vapply(ages, median, 2)
vapply(ages, median)
vapply(ages, median,1)
vapply(ages, median,2)
length(ages)
ages
dim(ages)
?lapply
vapply(ages, median,2)
vapply(ages, median)
vapply
?vapply
apply(ages, 2, median)
load_all(cf)
strat()
load_all(cf)
strat()
load_all(cf)
strat()
load_all(cf)
strat()
tmp
load_all(cf)
strat()
tmp
load_all(cf)
strat()
tmp
   colscale <- colorRamp(c("red", "green"))
colscale(1)
colscale(.1)
load_all(cf)
strat()
load_all(cf)
strat()
tmp
load_all(cf)
strat()
fitcols
load_all(cf)
strat()
tmo
tmp
fitcols
fits
load_all(cf)
strat()
load_all(cf)
strat()
ages
load_all(cf)
strat()
info$struc
load_all(cf)
strat()
load_all(cf)
strat()
load_all(cf)
strat()
info$within.hpds
strat("teststrat")
strat("teststrat")
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat.cleanup()
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat", postbomb=1)
strat("teststrat")
strat("teststrat")
strat("teststrat")
?approx
load_all(cf)
strat("teststrat")
load_all(cf)
strat("teststrat")
load_all(cf)
strat("teststrat")
build_vignettes()
getwd()
setwd("~/Dropbox/devsoftware/coffee")
build_vignettes()
build()
check()
check(cran=T)
build()
build()
rhub::check_with_rdevel()
rhub::rhub_check()
2
2
rhub::rhub_check()
build()
?rhub::rhub_check()
rhub::rhub_check()
build()
rhub::rhub_check()
rhub::rhub_check()
spell_check()
spell_check()
document()
spell_check()
build()
release()
build()
release()
setwd("../clam")
build()
check()
build_vignettes()
build()
rhub::rhub_check()
rhub::rhub_setup()
rhub::rhub_doctor()
rhub::rhub_check()
document()
build_vignettes()
build()
build()
rhub::rhub_check()
document()
build()
rhub::rhub_check()
build()
rhub::rhub_check()
build()
document()
build_vignettes()
build()
build()
rhub::rhub_check()
rhub::rhub_check()
build()
rhub::rhub_check()
build()
rhub::rhub_check()
list.files(".", all.files = TRUE, include.dirs = TRUE)
file.info(".Rbuildignore")
devtools::check()
list.files(".", all.files = TRUE, include.dirs = TRUE)
build()
q()
require(devtools)
check()
rhub::rhub_check()
rhub::rhub_check()
q()
require(devtools)
rhub::rhub_check()
rhub::rhub_check()
build_vignettes()
rhub::rhub_check()
build_vignettes()
build_vignettes()
build()
build_vignettes()
build()
rhub::rhub_check()
document()
build_vignettes()
clean_vignettes()
clean_vignettes()
build_vignettes()
build()
rhub::rhub_check()
rm(list = ls())
devtools::build(clean = TRUE)
devtools::build_vignettes()
devtools::check()
devtools::check()
devtools::build(clean = TRUE)
devtools::build_vignettes()
rhub::rhub_check()
devtools::build(clean = TRUE)
devtools::build(clean = TRUE)
devtools::build_vignettes()
document()
clean_vignettes()
devtools::build(clean = TRUE)
document()
rhub::rhub_check()
document()
devtools::build(clean = TRUE)
devtools::build(clean = TRUE)
rhub::rhub_check()
document()
devtools::build(clean = TRUE)
devtools::build(clean = TRUE)
build_vignettes()
rhub::rhub_check()
build_vignettes()
devtools::build(clean = TRUE)
build_vignettes()
document()
build_vignettes()
build_vignettes(clean=T)
document()
document()
build_vignettes(clean=T)
rhub::rhub_check()
build(vignettes=T)
build_vignettes(clean=T)
document()
devtools::build(clean = TRUE)
?build
rhub::rhub_check
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
document()
document()
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
check()
devtools::check()
tempfile()
tempfile("clam_runs")
?tempfile
devtools::check()
devtools::check()
devtools::check()
tempdir
devtools::check()
build_vignettes()
devtools::check()
source("../build.R")
source("../build.R")
devtools::check()
coredir
clam:::coredir
clam:::assign_coredir
source("../build.R")
source("../build.R")
clam:::assign_coredir
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
source("../build.R")
clam:::.validateDirectoryName
source("../build.R")
source("../build.R")
document()
document()
document()
source("../build.R")
?unlink
rhub::rhub_check()
devtools::check_win_devel()
source("../build.R")
devtools::check_win_devel()
release()
release()
build()
release()
devtools::document()
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
source("../build.R")
devtools::check()
rhub::rhub_check()
build()
document()
document()
release()
release()
22.7e3/400
22.7e3/300
22.7e3/350
q()
